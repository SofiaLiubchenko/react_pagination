{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","page","push","className","classNames","active","href","onClick","items","from","to","numbers","n","getNumbers","map","startItem","endItem","preparedItems","slice","disabled","preparedItem","App","useState","setPerPage","setCurrentPage","startIndex","endIndex","min","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAwB,SAAC,GASpC,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQ,GAFV,WAIKC,GACPD,EAAME,KACJ,oBAAIC,UAAWC,IAAW,YAAa,CAAEC,OAAQJ,IAASN,IAA1D,SACE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAML,GACVM,QAAS,kBAAMX,EAAaK,IAJ9B,SAMGA,QATAA,EAAO,EAAGA,GAAQJ,EAAeI,GAAQ,EAAI,EAA7CA,GAeT,IAAMO,ECnCD,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQT,KAAKU,GAGf,OAAOD,ED4BOE,CAAW,EAAG,IACzBC,KAAI,SAAAF,GAAC,qBAAYA,MAEdG,GAAapB,EAAc,GAAKD,EAChCsB,EAAUD,EAAYrB,EAEtBuB,EAAgBT,EAAMU,MAAMH,EAAWC,GAE7C,OACE,qCACE,qBAAIb,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YAAa,CAAEe,SAA0B,IAAhBxB,IAD3B,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EAAoB,OAAS,QAC5CY,QAAS,kBAAMX,EAAaD,EAAc,IAL5C,oBAUDK,EACD,oBAAIG,UAAWC,IACb,YAAa,CAAEe,SAAUxB,IAAgBE,IAD3C,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAAgB,OAAS,QACxDU,QAAS,kBAAMX,EAAaD,EAAc,IAL5C,uBAYJ,6BACGsB,EAAcH,KAAI,SAACM,GAAD,OACjB,oBAAI,UAAQ,OAAZ,SAAoBA,aE3EjBC,EAAgB,WAC3B,MAAgBC,mBAAS,IAAlB7B,EAAP,oBACA,EAA8B6B,mBAAiB,GAA/C,mBAAO5B,EAAP,KAAgB6B,EAAhB,KACA,EAAsCD,mBAAiB,GAAvD,mBAAO3B,EAAP,KAAoB6B,EAApB,KAQMC,GAAc9B,EAAc,GAAKD,EAAU,EAC3CgC,EAAW5B,KAAK6B,IAAIF,EAAa/B,EAAU,EAAGD,GAEpD,OACE,sBAAKU,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC8B,EADjC,cACiDC,EADjD,eACgEjC,EADhE,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRyB,GAAG,kBACHzB,UAAU,eACV0B,MAAOnC,EACPoC,SAAU,SAACC,GACTR,GAAYQ,EAAMC,OAAOH,OACzBL,EAAe,IAPnB,UAUE,wBAAQK,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB9B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACK,IA7CA,SAACA,GAChBN,IAAgBM,GAClBuB,EAAevB,GA4CXL,CAAaK,UCpDvBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.87b2a1fc.chunk.js","sourcesContent":["import { FC } from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages = [];\n\n  for (let page = 1; page <= numberOfPages; page += 1) {\n    pages.push(\n      <li className={classNames('page-item', { active: page === currentPage })}>\n        <a\n          data-cy=\"pageLink\"\n          className=\"page-link\"\n          href={`#${page}`}\n          onClick={() => onPageChange(page)}\n        >\n          {page}\n        </a>\n      </li>,\n    );\n  }\n\n  const items = getNumbers(1, 42)\n    .map(n => `Item ${n}`);\n\n  const startItem = (currentPage - 1) * perPage;\n  const endItem = startItem + perPage;\n\n  const preparedItems = items.slice(startItem, endItem);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item', { disabled: currentPage === 1 },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1 ? 'true' : 'false'}\n            onClick={() => onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {pages}\n        <li className={classNames(\n          'page-item', { disabled: currentPage === numberOfPages },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === numberOfPages ? 'true' : 'false'}\n            onClick={() => onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {preparedItems.map((preparedItem: string) => (\n          <li data-cy=\"item\">{preparedItem}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [total] = useState(42);\n  const [perPage, setPerPage] = useState<number>(5);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const onPageChange = (page: number) => {\n    if (currentPage !== page) {\n      setCurrentPage(page);\n    }\n  };\n\n  const startIndex = (currentPage - 1) * perPage + 1;\n  const endIndex = Math.min(startIndex + perPage - 1, total);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex} - ${endIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => {\n          onPageChange(page);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}